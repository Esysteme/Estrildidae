<?phpuse \Glial\Synapse\Singleton;use \Glial\Synapse\Controller;use \Glial\I18n\I18n;class Forum extends Controller{    private $tree = array(        "id_species_domain",        "id_species_kingdom",        "id_species_phylum",        "id_species_class",        "id_species_order",        "id_species_family",        "id_species_genus",        "id_species_main",        "id_species_sub");    function index($param)    {        $this->layout_name = "admin";        $path = $this->getPath($param);                                $this->title = __("Forum");                        $this->ariane = $this->ariane($path).__("Index");               /*          0 : pas pris en compte         * : n'mporte quelle valeur         */        $tab = explode("-", $path);        for ($i = 0; $i < 8; $i++) {            if (empty($tab[$i])) {                $tab[$i] = "*";            }        }        $sql = "SELECT * FROM forum_category where is_crossed = 0 order by disp_position ASC";        $res = $this->db['mysql_write']->sql_query($sql);        $out['category'] = $this->db['mysql_write']->sql_to_array($res);        $i = 0;        $k = 0;        foreach ($out['category'] as $val) {            $j = 0;            //forum fixe en fonction de la table forum_main            $sql = "SELECT name, description,id, 0 as cpt_topic,0 as cpt_post  FROM forum_main 				WHERE id_forum_category = " . $val['id'] . "";            foreach ($this->tree as $value) {                if ($tab[$k] === "*") {                    continue;                }                $sql .= " AND " . $this->tree[$k] . " = " . $tab[$k] . " OR " . $this->tree[$k] . " = 0 ";                $k++;            }            $sql .= " order by disp_position ASC";            //echo $sql."<br />";            $res = $this->db['mysql_write']->sql_query($sql);            $out['forum'][$val['id']] = $this->db['mysql_write']->sql_to_array($res);            $i++;        }        $out['tree_id'] = $path;        $out['path'] = $path;        $this->set('out', $out);        // debug($out);    }    function topic($param)    {        $path = $this->getPath($param);        $tree_id = explode("-", $path);        $id_forum = $tree_id[0];        unset($tree_id[0]);        $k = count($tree_id);        $sql = "select *, a.id as id_topic FROM forum_topic a        INNER JOIN forum_post b ON a.id_forum_post__first = b.id		WHERE 1";        if ($id_forum != 0) {            $sql .= " AND a.id_forum_main = " . $id_forum . " ";        }        $sql .= " AND " . $this->tree[$k - 2] . " = " . $tree_id[$k];        $res = $this->db['mysql_write']->sql_query($sql);        $out = array();        $out['forum'] = $this->db['mysql_write']->sql_to_array($res);        $out['path'] = $path;        $out['param'] = $param;        $this->set('out', $out);        //echo $sql;    }    function post($param)    {        $this->javascript = array("jquery-1.4.2.min.js");        $this->code_javascript[] = "$('#forum_post-id_language').change(function() {		  $('#flag').removeAttr('class').addClass($('#forum_post-id_language').val());		});";        $path = $this->getPath($param);        $this->ariane = $this->ariane($path) . __("Post");        if ($_SERVER['REQUEST_METHOD'] == "POST") {            debug($_POST);            $forum_topic = array();            $forum_topic['forum_topic']['id_forum_main'] = 545;            $forum_post = array();            $forum_post['forum_post'] = $_POST['forum_post'];            $forum_post['forum_post']['posted'] = date('Y-m-d H:i:s');            $forum_post['forum_post']['id_user_main'] = $GLOBALS['_SITE']['IdUser'];            $forum_post['forum_post']['hide_smilies'] = 0;            $forum_post['forum_post']['id_forum_topic'] = 0;            $id_forum_post = $this->db['mysql_write']->sql_save($forum_post);            if (!$id_forum_post) {                $error = $this->db['mysql_write']->sql_error();                debug($error);                debug($id_forum_post);                die();            } else {                $taxo_tree = explode('-', $param[0]);                $row = array();                //$forum_topic['forum_topic']['id_forum_main'] = $_POST['forum_post'];                $forum_topic['forum_topic']['id_user_main'] = $GLOBALS['_SITE']['IdUser'];                $forum_topic['forum_topic']['id_forum_main'] = $_POST['forum_topic']['id_forum_main'];                $forum_topic['forum_topic']['id_forum_post__first'] = $id_forum_post;                $forum_topic['forum_topic']['id_forum_post__last'] = $id_forum_post;                $forum_topic['forum_topic']['subject'] = $_POST['forum_post']['title'];                $forum_topic['forum_topic']['posted'] = date('Y-m-d H:i:s');                $forum_topic['forum_topic']['id_species_kingdom'] = $taxo_tree[1];                $forum_topic['forum_topic']['id_species_phylum'] = $taxo_tree[2];                $forum_topic['forum_topic']['id_species_class'] = $taxo_tree[3];                if (!empty($taxo_tree[4]))                    $forum_topic['forum_topic']['id_species_order'] = $taxo_tree[4];                if (!empty($taxo_tree[5]))                    $forum_topic['forum_topic']['id_species_family'] = $taxo_tree[5];                if (!empty($taxo_tree[6]))                    $forum_topic['forum_topic']['id_species_genus'] = $taxo_tree[6];                //$forum_topic['forum_topic']['id_species_main'] = (!empty($taxo_tree[7])) ? $taxo_tree[7] : 0;                //$forum_topic['forum_topic']['id_species_sub'] = (!empty($taxo_tree[8])) ? $taxo_tree[8] : 0;                $id_forum_topic = $this->db['mysql_write']->sql_save($forum_topic);                if (!$id_forum_topic) {                    $error = $this->db['mysql_write']->sql_error();                    debug($forum_topic);                    debug($error);                    debug($id_forum_topic);                    die();                } else {                    $update = array();                    $update['forum_post']['id'] = $id_forum_post;                    $update['forum_post']['id_forum_topic'] = $id_forum_topic;                    $ret = $this->db['mysql_write']->sql_save($update);                    if (!$ret) {                        $error = $this->db['mysql_write']->sql_error();                        debug($update);                        debug($error);                        die();                    } else {                        header("location: " . LINK . "forum/view/6/");                        exit;                    }                }            }        }        $elems = explode('-', $path);        $id_forum = $elems[0];        $nb_elem = count($elems);        $sql = "select id,scientific_name as name  		FROM " . substr($this->tree[$nb_elem - 2], 3) . " 		WHERE id = " . $elems[$nb_elem - 1] . "		AND is_valid = 1		ORDER BY scientific_name";        $res = $this->db['mysql_write']->sql_query($sql);        $ob = $this->db['mysql_write']->sql_fetch_object($res);        if ($id_forum != 0) {            $sql = "SELECT * FROM forum_main where id = " . $id_forum . "";            $res = $this->db['mysql_write']->sql_query($sql);            $ob2 = $this->db['mysql_write']->sql_fetch_object($res);            $ob->name = $ob->name . " (" . strtolower(__($ob2->name)) . ")";        }        $lg = explode(",", LANGUAGE_AVAILABLE);        $nbchoice = count($lg);        for ($i = 0; $i < $nbchoice; $i++) {            $data['geolocalisation_country'][$i]['libelle'] = I18n::$languagesUTF8[$lg[$i]];            $data['geolocalisation_country'][$i]['id'] = $lg[$i];        }        $data['default_lg'] = I18n::Get();        $this->title = __("Post");        // generate list for category        $sql = "SELECT name as libelle,id FROM forum_main WHERE id_forum_category = 1";        $sql .= " order by disp_position ASC";        $res = $this->db['mysql_write']->sql_query($sql);        $data['category_default'] = $id_forum;        $data['categories'] = $this->db['mysql_write']->sql_to_array($res);        $this->set("data", $data);    }    function view($param)    {        $sql = "SELECT * FROM forum_topic a            INNER JOIN forum_post b ON b.id_forum_topic = a.id            INNER JOIN user_main c ON c.id = b.id_user_main            WHERE a.id=" . $param[0] . "                order by b.posted asc";        $res = $this->db['mysql_write']->sql_query($sql);        $data['view'] = $this->db['mysql_write']->sql_to_array($res);        $this->set("data", $data);    }    function category($param)    {        $this->layout_name = "admin";        $path = $this->getPath($param);        $found = false;        $tab = explode("-", $path);// firt elem is used for 2D        $nb_elem = count($tab);        $ref['table_to_find'] = substr($this->tree[$nb_elem - 2], 3);        $ref['id_field'] = $this->tree[$nb_elem - 3];        $ref['id_to_compare'] = $this->tree[$nb_elem - 2];        $ref['id_to_find'] = $tab[$nb_elem - 1];        $sql = "SELECT * FROM forum_category where is_crossed = 1 order by disp_position ASC";        $res = $this->db['mysql_write']->sql_query($sql);        $out['category'] = $this->db['mysql_write']->sql_to_array($res);        $i = 0;        $k = 5;        foreach ($out['category'] as $val) {            $j = 0;            //forum dynamique en fonction des especes            $sql = "select id,scientific_name as name,                    (select count(1) as cpt from forum_topic b where b." . $ref['id_to_compare'] . " = a.id) as cpt_topic,                    (select count(1) as cpt from forum_topic c                     INNER JOIN forum_post d ON c.id = d.id_forum_topic                    where c." . $ref['id_to_compare'] . " = a.id) as cpt_post				FROM " . $ref['table_to_find'] . " a				WHERE " . $ref['id_field'] . " = " . $ref['id_to_find'] . "				AND id_history_etat = 1				ORDER BY scientific_name";            $part = explode("_", $this->tree[$k]);            if ($part[2] == "sub") {                $part[2] = "Subspecies";            }            if ($part[2] == "main") {                $part[2] = "Species";            }            $out['category'][$i]['name'] = ucwords($part[2]);        }        $res = $this->db['mysql_write']->sql_query($sql);        $out['forum'][$val['id']] = $this->db['mysql_write']->sql_to_array($res);        $i++;        $out['path'] = $path;        $this->set('out', $out);        // debug($out);    }    function getPath($param)    {        if (empty($param)) {            //$tree_id = "1-*-*-*-*-*-*";            return "0-" . TAXO_TREE;        } else {            return $param[0];        }    }    function ariane($path)    {        $elems = explode('-', $path);        $nb_elem = count($elems);        switch (substr($this->tree[$nb_elem - 3], 11)) {            case "main":                $sql = "SELECT * FROM `species_tree_species`             WHERE `id_species` = '" . $this->db['mysql_write']->sql_real_escape_string($elems[$nb_elem - 1]) . "' LIMIT 1";                break;            default:                $sql = "SELECT * FROM `species_tree_" . substr($this->tree[$nb_elem - 3], 11) . "`             WHERE `id_" . substr($this->tree[$nb_elem - 3], 11) . "` = '" . $this->db['mysql_write']->sql_real_escape_string($elems[$nb_elem - 1]) . "' LIMIT 1";                break;        }        $res = $this->db['mysql_write']->sql_query($sql);        $tmp = $this->db['mysql_write']->sql_to_array($res);        $this->data['species'] = $tmp[0];        switch (substr($this->tree[$nb_elem - 2], 11)) {            case 'kingdom': $lgt = 1;                break;            case 'phylum': $lgt = 2;                break;            case 'class': $lgt = 3;                break;            case 'order': $lgt = 4;                break;            case 'family': $lgt = 5;                break;            case 'genus': $lgt = 6;                break;            case 'nominal': $lgt = 7;            case 'main': $lgt = 7;                break;            case 'sub': $lgt = 8;                break;            default :                die("unknow table : " . substr($this->tree[$nb_elem - 2], 11));                break;        }        $arial = "> ";        $arial .= "<a href=\"" . LINK . "forum/\">" . __("Forum") . "</a> > ";        $link = LINK . "forum/index/0-1-1";        $arial .= '<a href="' . $link . '">' . __("Eukaryota") . '</a> > ';        if ($lgt > 1) {            $link = $link . "-" . $this->data['species']['id_kindomn'];            $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['kingdom'], "la") . "</a> > ";            if ($lgt > 2) {                $link = $link . "-" . $this->data['species']['id_phylum'];                $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['phylum'], "la") . "</a> > ";                if ($lgt > 3) {                    $link = $link . "-" . $this->data['species']['id_class'];                    $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['class'], "la") . "</a> > ";                    if ($lgt > 4) {                        $link = $link . "-" . $this->data['species']['id_order'];                        $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['order'], "la") . "</a> > ";                        if ($lgt > 5) {                            $link = $link . "-" . $this->data['species']['id_family'];                            $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['family'], "la") . "</a> > ";                            if ($lgt > 6) {                                $link = $link . "-" . $this->data['species']['id_genus'];                                $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['genus'], "la") . "</a> > ";                                if ($lgt > 7) {                                                                        $link = $link . "-" . $this->data['species']['id_species'];                                    $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['species'], "la") . "</a> > ";                                    if ($lgt > 8) {                                        $arial .= "<a href=\"" . $link . "\">" . __($this->data['species']['nominal'], "la") . "</a> > ";                                    }                                }                            }                        }                    }                }            }        }        return $arial;    }}